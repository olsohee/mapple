name: Build and Deploy Spring Boot to AWS EC2

on:
  push:
    branches: [ "staging" ]

env:
  PROJECT_NAME: mapple
  BUCKET_NAME: mapplebucket
  CODE_DEPLOY_APP_NAME: mapple
  DEPLOYMENT_GROUP_NAME: mapple

jobs:
  # job 이름 정의
  build:
    # 실행 환경 지정
    runs-on: ubuntu-latest

    steps:
      # 코드 내려받기
      - name: Checkout
        uses: actions/checkout@v3
        
      # 자바 설정 
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # application.yml 파일의 환경 변수에 값 대입
      - name: Set Yml
        uses: microsoft/variable-substitution@v1
        with:
          files: ./src/main/resources/application.yml
        env:
          spring.datasource.url: ${{ secrets.DATASOURCE_URL }}
          spring.datasource.username: ${{ secrets.DATASOURCE_USERNAME }}
          spring.datasource.password: ${{ secrets.DATASOURCE_PASSWORD }}
          jwt.secret: ${{ secrets.JWT_SECRET }}
          file.dir.review_image: ${{ secrets.FILE_DIR_REVIEW_IMAGE }}

      # 빌드 권한 설정    
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        
      # 빌드
      - name: Build with Gradle
        run: ./gradlew clean build --exclude-task test

      # zip 파일 생성
      - name: Make zip file
        run: zip -r ./$GITHUB_SHA.zip .
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$BUCKET_NAME/$GITHUB_SHA.zip

      - name: Code Deploy
        run: |
          aws deploy create-deployment \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --application-name ${{ env.CODE_DEPLOY_APP_NAME }} \
          --deployment-group-name ${{ env.DEPLOYMENT_GROUP_NAME }} \
          --s3-location bucket=${{ env.BUCKET_NAME }},bundleType=zip,key=$GITHUB_SHA.zip  
